basePath: /api
definitions:
  auth.authInfo:
    properties:
      password:
        minLength: 6
        type: string
      username:
        minLength: 6
        type: string
    required:
    - password
    - username
    type: object
  auth.refreshInfo:
    properties:
      refresh_jwt:
        minLength: 1
        type: string
    required:
    - refresh_jwt
    type: object
host: 127.0.0.1:8080
info:
  contact: {}
  description: gin 模板
  title: gin_template
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: |-
        登录获取 jwt
        code == 1102 , 需刷新 jwt;
        code == 1200 , 需重新登录后跳转;
        code == 1101 , 再次请求; (基本不需要)
      parameters:
      - description: 登录信息
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/auth.authInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: 登录接口
      tags:
      - 认证
  /auth/refresh_token:
    post:
      consumes:
      - application/json
      description: 刷新 jwt
      parameters:
      - description: 刷新tokenn信息
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/auth.refreshInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - OAuth2Password: []
      summary: 刷新token接口
      tags:
      - 认证
  /user/:
    get:
      consumes:
      - application/json
      description: 用户模拟接口
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: 用户接口
      tags:
      - 用户
  /user/2:
    get:
      consumes:
      - application/json
      description: 模拟panic
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: 用户接口2
      tags:
      - 用户
securityDefinitions:
  OAuth2Password:
    description: OAuth protects our entity endpoints
    flow: password
    tokenUrl: /api/auth/login
    type: oauth2
swagger: "2.0"
